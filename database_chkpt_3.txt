#### Short Answers

Use the commands above to complete the following tasks, and submit the SQL statements. Real-world examples must be 
distinct from those used in the text.

Q1. List the commands for adding, updating, and deleting data.

A: 

Add:
INSERT INTO, VALUES

Update:
 UPDATE, SET, WHERE
 
Delete: 
 DELETE FROM, WHERE

Q2. Explain the structure for each type of command.

A:

Add:
INSERT INTO table_name (column1, column2, column3)
VALUES (value1, value2, value3);

Update:
UPDATE table_name 
SET column_name = 'value'
WHERE id = value;

Delete:
DELETE FROM table_name
WHERE column_name = 'value';

Q3. What are some of the data types that can be used in tables? Give a real-world example of each type.

A: 

- Time Zones is a data type that can be used in a scenario such as needing to schedule an event in another time zone.
- Line Segments is another data type that could be used for graphs to analyze data. Stocks for example.
- Network Address Types can be used to check that an account is being signed into securely from user data.

#### Programming Questions

4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have 
first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of 
meals (1 for adults and 1/2 for children).

a) Which data type would you use to store each of the following pieces of information?
    - First and last name. - Character Types
    - Whether they sent in their RSVP. - Boolean Type
    - Number of guests. - Integer Type
    - Number of meals. - Integer Type

b) Write a command that creates the table to track the wedding dinner.
    CREATE TABLE wedding_dinner (
        first text, 
        last text, 
        rsvp boolean, 
        guests smallint, 
        meals decimal(2, 1)
    );
    
c) Write a command that adds a column to track whether the guest sent a thank you card.
    ALTER TABLE wedding_dinner ADD COLUMN card boolean;
    
d) You have decided to move the data about the meals to another table, so write a command to remove the column storing 
  the number meals from the wedding table.
    ALTER TABLE wedding_dinner DROP COLUMN meals;
    
e) The guests will need a place to sit at the reception, so write a command that adds a column for table number.
    ALTER TABLE wedding_dinner ADD COLUMN number smallint;
    
f) The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers 
  from the database.
    ALTER TABLE wedding_dinner DROP COLUMN number;


5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, 
publishing date, number of copies, and available copies.

    CREATE TABLE library (
        isbn bigint, 
        title text, 
        author text, 
        genre text, 
        date date, 
        copies integer, 
        available integer
    );

a) Find three books and add their information to the table.
    INSERT INTO library (isbn, title, author, genre, date, copies, available) 
    VALUES 
    (1237893219, 'The Art of Art', 'Pablo Picasso', 'Non-fiction', '1745-08-23', 30105, 17002),
    (9874563210, 'Romance', 'Austin Powers', 'fiction', '1971-03-11', 25000, 15000),
    (5678394820, 'Who Actually Shot The Sheriff', 'Ace Ventura', 'mystery', '2002-09-19', 13000, 7500);

b) Someone has just checked out one of the books. Change the number of available copies to 1 fewer.
    UPDATE library
    SET available = 14999
    WHERE isbn = 9874563210;

c) Now one of the books has been added to the banned books list. Remove it from the table.
    DELETE FROM library WHERE isbn = 5678394820;


6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, 
country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its 
approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:

    CREATE TABLE spacecrafts (
    id integer,
    name text,
    year date,
    country text,
    mission text,
    orbit text,
    operating boolean,
    distance decimal(10, 4)
    );

a) Add three non-Earth-orbiting satellites to the table.
    INSERT INTO spacecrafts (id, name, year, country, mission, orbit, operating, distance)
    VALUES
    ( 476, 'Ricky', '1998-02-20', 'Canada', 'save the trailer park', 'outer', true, 244445.657),
    ( 97, 'Bubbles', '2009-05-15', 'United States', 'collect shopping carts', 'inner', false, 520.245),
    ( 45, 'Julian', '2014-03-09', 'Mexico', 'hide from lahey', 'middle', true, 800345.629);

b) Remove one of the satellites from the table since it has just crashed into the planet.
    DELETE FROM spacecrafts WHERE name = 'Ricky';

c) Edit another satellite because it is no longer operating and change the value to reflect that.
    UPDATE spacecrafts
    SET operating = false
    WHERE name = 'Julian';


7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the 
subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have 
read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:

    CREATE TABLE inbox (
        id integer,
        subject text,
        sender text, 
        recipients text,
        body text,
        timestamp timestamptz,
        read boolean,
        chain text
    );

a) Add three new emails to the inbox.
    INSERT INTO inbox (id, subject, sender, recipients, body, timestamp, read, chain)
    VALUES
    ( 123, 'start', 'boss@bossman.com', 'partner@work.com', 'hello', '2015-02-20 09:20:13 EST', true, 'new project'),
    ( 456, 'middle', 'partner@work.com', 'none', 'anyways', '2016-01-10 12:34:40 EST', true, 'checkup'),
    ( 789, 'end', 'client@customer.com', 'boss@bossman.com', 'the end', '2017-07-27 4:05:21 CST', false, 'finish');

b) You deleted one of the emails, so write a command to remove the row from the inbox table.
    DELETE FROM inbox WHERE id = 123;

c) You started reading an email but just heard a crash in another room. Mark the email as unread before investigating 
   the crash, so you can come back and read it later.
    UPDATE inbox 
    SET read = false
    WHERE id = 456;
